<?php

/**
 * @file
 * Functions to support theming in the localgov_theme_croydon theme.
 */

use Drupal\Component\Utility\Html;
use Drupal\file\Entity\File;
use Drupal\image\Entity\ImageStyle;


/**
 * Implements hook_preprocess_page() for hook_preprocess_page__localgov_guides_overview().
 *
 * - Content region always occupies 8 out of 12 columns in wider displays.
 */
function localgov_theme_croydon_preprocess_page__localgov_guides_overview(&$variables) {

  $variables['has_sidebar_second'] = TRUE;
}

/**
 * Implements hook_preprocess_page() for hook_preprocess_page__localgov_guides_page().
 *
 * - Content region always occupies 8 out of 12 columns in wider displays.
 */
function localgov_theme_croydon_preprocess_page__localgov_guides_page(&$variables) {

  $variables['has_sidebar_second'] = TRUE;
}

/**
 * Implements hook_preprocess_page() for hook_preprocess_page__localgov_step_by_step_overview().
 *
 * - Content region always occupies 8 out of 12 columns in wider displays.
 */
function localgov_theme_croydon_preprocess_page__localgov_step_by_step_overview(&$variables) {

  $variables['has_sidebar_second'] = TRUE;
}

/**
 * Implements hook_preprocess_page() for hook_preprocess_page__localgov_services_page().
 *
 * - Content region always occupies 8 out of 12 columns in wider displays.
 */
function localgov_theme_croydon_preprocess_page__localgov_services_page(&$variables) {

  $variables['has_sidebar_second'] = TRUE;
}

/**
 * Implements hook_preprocess_file_link().
 *
 * Changes:
 * - Inserts file *type* into the theme variable.
 * - Reformats file size.  Example: 123.4KB.
 *
 * @see template_preprocess_file_link()
 */
function localgov_theme_croydon_preprocess_file_link(&$variables) {

  $file = $variables['file'];
  $mime_type = $file->getMimeType();
  // application/pdf -> pdf.
  $variables['file_type'] = explode('/', $mime_type)[1] ?? '-';

  // 123.45 KB -> 123.45KB
  $variables['file_size'] = strtr($variables['file_size'], [' ' => '']);
}

/**
 * Implements hook_preprocess_block() for hook_preprocess_block__subsitebanner_homepage().
 *
 * Makes the render array for the *banner image path* available to the block
 * template.
 */
function localgov_theme_croydon_preprocess_block__subsitebanner_homepage(&$variables) {

  $banner_paragraph = $variables['content']['#paragraph'];
  $has_no_banner_img = !($banner_paragraph->localgov_image and $banner_paragraph->localgov_image->count());
  if ($has_no_banner_img) {
    $variables['banner_img_url'] = '';
    return;
  }
  $banner_img = $banner_paragraph->localgov_image->entity;
  $banner_img_url = Drupal::service('entity_type.manager')->getViewBuilder($banner_img->getEntityTypeId())->view($banner_img, 'cds_image_path');
  $variables['banner_img_url'] = $banner_img_url;
}

/**
 * Implements hook_preprocess_localgov_alert_banner() for hook_preprocess_localgov_alert_banner__cds_full_page().
 *
 * Adds a unique id for the top level wrapper div of the alert banner.
 */
function localgov_theme_croydon_preprocess_localgov_alert_banner__cds_full_page(&$variables) {

  $alert_banner_id = $variables['attributes']['id'] ?? Html::getUniqueId('cds_full_page_alert_banner');
  $variables['attributes']['id'] = $alert_banner_id;

  $variables['#attached']['drupalSettings']['localgov_theme_croydon']['cds_full_page_alert_banner_id'] = $alert_banner_id;
  $variables['#attached']['library'][] = 'localgov_theme_croydon/full_page_alert_banner';
}

/**
 * Implements hook_preprocess_hook() for hook_preprocess_paragraph().
 *
 * Changes:
 * - Overrides Call-out-box background image.  Replaces the 21:9 crop image with
 *   a Free-form crop image.
 *
 * @see localgov_subsites_paragraphs_preprocess_paragraph()
 */
function localgov_theme_croydon_preprocess_paragraph(&$variables) {

  $paragraph = $variables['paragraph'];
  if ($paragraph->bundle() === 'localgov_call_out_box' && !$paragraph->get('localgov_background_image')->isEmpty()) {
    $fid = $paragraph->get('localgov_background_image')->entity->field_media_image[0]->getValue()['target_id'];
    $file_url = File::load($fid)->getFileUri();
    $variables['background_url'] = ImageStyle::load('cds_original_ratio_768_width')->buildUrl($file_url);
  }
}
